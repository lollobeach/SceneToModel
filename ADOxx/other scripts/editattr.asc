# CC "AdoScript" INFOBOX ("Funziona")
 
# SETG objId:(instid)
# SETG attrId:(attrid)

# CC "AdoScript" INFOBOX (attrId)

CC "Modeling" GET_ACT_MODEL
SETL mymid:(modelid)

CC "Core"   GET_MODEL_INFO  modelid:(mymid)
#--> RESULT modeltype:strValue 
# CC "AdoScript" INFOBOX (modeltype)

IF (modeltype <> "bpFM Model") {
    EXIT # Per uscire, non necessario se metto l'else
}

CC "Core" GET_ATTR_NAME attrid:(attrId)
#-->RESULT ecode:intValue attrname:strValue

IF (attrname = "Selection") {
	# Vedo a cosa è stata selezionata
	CC "Core" GET_ATTR_VAL objid:(objId) attrname:("Selection")
    #-->RESULT ecode:intValue val:anyValue
	SETL selVal:(val)
	
	# PRENDO TUTTI I FIGLI
	CC "Core" GET_OBJ_NAME objid:(objId)
    #-->RESULT ecode:intValue objname:strValue
	SETL myoName:(objname)
	
	#
	# CC "AdoScript" INFOBOX (objname + " " + selVal)
	#
	
	#
	# Gli altri elementi da includere ed escludere
	#
	
	IF (selVal = "No Selected") {
	
		#
		# SE LO DESELEZIONO, DEVO DESELEZIONARE TUTTI I FIGLI
		#
	
		# CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + myrootname + "\"}->\"Include\")") modelid:(mymid)
		# SETL inc_elements:(objids)
		
		# CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + myrootname + "\"}->\"IncludeTwoWay\")") modelid:(mymid)
		# SETL inc_elements:(inc_element + " " + objids)
		
		# CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + myrootname + "\"}->\"Exclude\")") modelid:(mymid)
		# SETL exc_elements:(objids)
		
		#
		# Ora quelli normali 
		#
		
		# CC "AdoScript" INFOBOX (myoName)
		
		WHILE (myoName <> "") {
			
			SETL appoName:""
			
			FOR mnam in:(myoName) sep:"|" {			
				IF (mnam <> "") {
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"XSSA\")") modelid:(mymid)
					SETL str_objids1:(objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"XSA\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"OR\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"AND\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"OSA\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"Mandatory\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"Optional\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"SpecialCase\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}->\"Domain\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
				
					FOR obj1 in:(str_objids1) sep:" " {
						IF (obj1 <> "") {
							CC "Core" GET_OBJ_NAME objid:(VAL obj1)
							#-->RESULT ecode:intValue objname:strValue
							SETL appoName:(appoName + "|" + objname)
							
							CC "Core" SET_ATTR_VAL objid:(VAL obj1) attrname:("Selection") val:("No Selected")
							#-->RESULT ecode:intValue
						}
					}	
				}
					
			}
			
			# CC "AdoScript" INFOBOX (appoName)			
			SETL myoName:(appoName)			
			# CC "AdoScript" INFOBOX ("_" + myoName + "_")
			
		}
	} ELSE {
		#
		# SE LO SELEZIONO, DEVO DESELEZIONARE TUTTI GLI AVI
		#
		
		WHILE (myoName <> "") {
			
			SETL appoName:""
			
			FOR mnam in:(myoName) sep:" " {			
				IF (mnam <> "") {
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"XSSA\")") modelid:(mymid)
					SETL str_objids1:(objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"XSA\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"OR\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"AND\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"OSA\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"Mandatory\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"Optional\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"SpecialCase\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
					CC "AQL" EVAL_AQL_EXPRESSION expr:("({\"" + mnam + "\"}<-\"Domain\")") modelid:(mymid)
					SETL str_objids1:(str_objids1 + " " + objids)
				
					FOR obj1 in:(str_objids1) sep:" " {
						IF (obj1 <> "") {
							CC "Core" GET_OBJ_NAME objid:(VAL obj1)
							#-->RESULT ecode:intValue objname:strValue
							SETL appoName:(appoName + " " + objname)
							
							CC "Core" SET_ATTR_VAL objid:(VAL obj1) attrname:("Selection") val:("Selected")
							#-->RESULT ecode:intValue
						}
					}	
				}
					
			}
			
			# CC "AdoScript" INFOBOX (appoName)			
			SETL myoName:(appoName)			
			# CC "AdoScript" INFOBOX ("_" + myoName + "_")
			
		}

	
	}
	
	
	
	
	
} 
# ALTRIMENTI NON FACCIO NIENTE